name: Build and Release APK

on:
  push:
    tags:
      - 'v*'  # v로 시작하는 태그가 푸시될 때 실행 (예: v1.0.6)

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Build Release APK
        run: ./gradlew assembleRelease
      
      - name: Sign APK (optional)
        run: |
          echo "APK 서명은 필요시 추가"
      
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## 변경사항
            - 버전 ${{ steps.get_version.outputs.VERSION }} 릴리즈
            
            ## 다운로드
            아래 APK 파일을 다운로드하여 설치하세요.
            
            ## 설치 방법
            1. APK 파일 다운로드
            2. 설정 > 보안 > 출처를 알 수 없는 앱 설치 허용
            3. APK 파일 실행하여 설치
          draft: false
          prerelease: false
      
      - name: Upload Release APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/build/outputs/apk/release/app-release.apk
          asset_name: calendar-widget-${{ steps.get_version.outputs.VERSION }}.apk
          asset_content_type: application/vnd.android.package-archive

